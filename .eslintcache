[{"C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\App.js":"1","C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\index.js":"2","C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\reportWebVitals.js":"3","C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\views\\Login\\Login.js":"4","C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\views\\Browse\\Browse.js":"5","C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\auth\\protected.route.js":"6","C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\views\\Dashboard\\Dashboard.js":"7","C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\auth\\auth.js":"8","C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\navigation\\Topnav.js":"9","C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\Components\\Organisms\\Forms\\InputErrorMessage.js":"10","C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\Components\\Organisms\\Forms\\FormSmall.js":"11","C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\Components\\Organisms\\Toast\\Toast.js":"12","C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\Components\\Organisms\\Forms\\InputGroup.js":"13","C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\Components\\Atoms\\Button\\Button.js":"14","C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\styling\\Themes.js":"15","C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\utils\\constants.js":"16","C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\Contexts\\ThemeContext.js":"17"},{"size":1069,"mtime":1632707794594,"results":"18","hashOfConfig":"19"},{"size":500,"mtime":1632635157282,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1607979282483,"results":"21","hashOfConfig":"19"},{"size":2692,"mtime":1632634636495,"results":"22","hashOfConfig":"19"},{"size":220,"mtime":1608324005834,"results":"23","hashOfConfig":"19"},{"size":806,"mtime":1632633895417,"results":"24","hashOfConfig":"19"},{"size":382,"mtime":1632707688285,"results":"25","hashOfConfig":"19"},{"size":875,"mtime":1608758464361,"results":"26","hashOfConfig":"19"},{"size":989,"mtime":1632708287847,"results":"27","hashOfConfig":"19"},{"size":213,"mtime":1608324005834,"results":"28","hashOfConfig":"19"},{"size":2554,"mtime":1632634837573,"results":"29","hashOfConfig":"19"},{"size":2513,"mtime":1608324005834,"results":"30","hashOfConfig":"19"},{"size":738,"mtime":1608324005834,"results":"31","hashOfConfig":"19"},{"size":1018,"mtime":1632708287844,"results":"32","hashOfConfig":"19"},{"size":945,"mtime":1632707779930,"results":"33","hashOfConfig":"19"},{"size":253,"mtime":1632707445629,"results":"34","hashOfConfig":"19"},{"size":86,"mtime":1632707284764,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"v78h59",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\App.js",["73"],"C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\index.js",[],"C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\reportWebVitals.js",[],["74","75"],"C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\views\\Login\\Login.js",["76","77"],"import React, { useState } from 'react';\r\nimport FormSmall from '../../Components/Organisms/Forms/FormSmall';\r\nimport styles from './Login.module.css';\r\nimport globalStyles from '../../styling/globalStyles.module.css';\r\nimport InputErrorMessage from '../../Components/Organisms/Forms/InputErrorMessage';\r\nimport axios from 'axios';\r\nimport Toast from '../../Components/Organisms/Toast/Toast';\r\nimport auth from '../../auth/auth';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst Login = ({history}) => {\r\n    const [toastList, setToastList] = useState([]);\r\n\r\n    const validatePassword = (val, errors) => {\r\n        if (!val) {\r\n            errors.password = <InputErrorMessage message=\"Password is required.\" />\r\n        }\r\n        return errors;\r\n    }\r\n    const validateUsername = (val, errors) => {\r\n        if (!val) {\r\n            errors.username = <InputErrorMessage message=\"Username is required.\" />\r\n        }\r\n        return errors;\r\n    }\r\n    const attepmtLogin = async (values) => {\r\n        // let URL = `${process.env.REACT_APP_API_URL}/login`;\r\n        // try {\r\n        //     await axios.post(URL, values);\r\n        // }\r\n        // catch (e) {\r\n        //     console.log(e);\r\n        //     setToastList([...toastList, ...[{\r\n        //         id: Date.now(),\r\n        //         title: \"Error\",\r\n        //         description: \"Wrong User Credentials\",\r\n        //         backgroundColor: \"var(--color-danger)\",\r\n        //     }]])\r\n        // }\r\n        localStorage.setItem('token', `123456`)\r\n        // localStorage.setItem('user', JSON.stringify(user));\r\n        auth.handleLoginSuccess(() => { history.push(`/dashboard`) });\r\n\r\n    }\r\n    return (\r\n        <div className={styles.main}>\r\n            {/* <div>\r\n                <h1>Login</h1>\r\n            </div> */}\r\n            <div className={styles.formWrapper}>\r\n            <div className={globalStyles.card}>\r\n                <FormSmall\r\n                    handleSubmit={attepmtLogin}\r\n                    title=\"Login\"\r\n                    initialValues={{ username: \"\", password: \"\" }}\r\n                    fields={[{\r\n                        name: 'username', label: 'Username', validate: validateUsername\r\n                    },\r\n                    { name: 'password', label: \"Password\", validate: validatePassword, type: \"password\" }\r\n                    ]} />\r\n                \r\n            </div>\r\n            </div>\r\n            <Toast\r\n                    toastList={toastList}\r\n                    position={\"top_right\"}\r\n                    autoDelete={true}\r\n                    dismissTime={3500}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Login);","C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\views\\Browse\\Browse.js",[],"C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\auth\\protected.route.js",[],"C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\views\\Dashboard\\Dashboard.js",[],"C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\auth\\auth.js",[],"C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\navigation\\Topnav.js",[],"C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\Components\\Organisms\\Forms\\InputErrorMessage.js",[],"C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\Components\\Organisms\\Forms\\FormSmall.js",["78"],"import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport styles from './forms.module.css';\r\nimport InputGroup from './InputGroup';\r\nimport GlobalButton from '../../Atoms/Button/Button';\r\n\r\nconst FormSmall = ({ title, initialValues, fields, handleSubmit }) => {\r\n    //FormSmall takes in \"initialValues\"-an object with keys that match the fields and \"fields\"-an array of objects. \r\n    //Each field object contains a name, a label, and a function called 'validate' which takes in a value and an errors object.\r\n    //If the value is a valid submission for the given field, the object is returned. If not, a key/value pair is added to the \r\n    //errors object with the key being the field name and the value being a description of the problem. \r\n    //The errors object is returned always.\r\n\r\n    const validate = (values, fields) => {\r\n        let errors = {};\r\n        fields.map(field => {\r\n            errors = field.validate(values[field.name], errors);\r\n        })\r\n        return errors;\r\n    }\r\n    const renderInputs = (fields, values, handleChange, handleBlur, errors, touched) => {\r\n        return fields.map(field => {\r\n            return <InputGroup\r\n                type={field.type}\r\n                label={field.label}\r\n                value={values[field.name]}\r\n                handleChange={handleChange}\r\n                handleBlur={handleBlur}\r\n                placeholder={field.label}\r\n                name={field.name}\r\n                errors={errors}\r\n                touched={touched}\r\n            />\r\n        })\r\n    }\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validate={(values) => validate(values, fields)}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting,\r\n            }) => (\r\n                <form\r\n                    className={styles.formSmall}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <h1 className = {styles.formTitle}>{title}</h1>\r\n                    {renderInputs(fields, values, handleChange, handleBlur, errors, touched)}\r\n                    <div className={styles.btnWrapper}>\r\n                    <GlobalButton type='submit' disabled={isSubmitting} content=\"Login\" />\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default FormSmall;","C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\Components\\Organisms\\Toast\\Toast.js",[],"C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\Components\\Organisms\\Forms\\InputGroup.js",[],"C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\Components\\Atoms\\Button\\Button.js",[],"C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\styling\\Themes.js",[],"C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\utils\\constants.js",[],"C:\\Users\\grego\\Documents\\Projects\\react_basic_template\\src\\Contexts\\ThemeContext.js",[],{"ruleId":"79","severity":1,"message":"80","line":19,"column":42,"nodeType":"81","messageId":"82","endLine":19,"endColumn":43},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":6,"column":8,"nodeType":"89","messageId":"90","endLine":6,"endColumn":13},{"ruleId":"87","severity":1,"message":"91","line":12,"column":23,"nodeType":"89","messageId":"90","endLine":12,"endColumn":35},{"ruleId":"92","severity":1,"message":"93","line":16,"column":26,"nodeType":"94","messageId":"95","endLine":16,"endColumn":28},"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'setToastList' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]